<!DOCTYPE html>
<html>
<head>
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8" />
    <meta charset="utf-8" />

    <meta http-equiv="cache-control" content="max-age=0" />
    <meta http-equiv="cache-control" content="no-cache" />
    <meta http-equiv="expires" content="0" />
    <meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT" />
    <meta http-equiv="pragma" content="no-cache" />

    <title>WYSIWYG</title>

    <!--
    <meta name="viewport" content="width=device-width, initial-scale=1.00, minimum-scale=1.00, maximum-scale=1.00" />
    <meta name="viewport" content="width=device-width, initial-scale=1.00, minimum-scale=1.00, maximum-scale=10.00, user-scalable=yes" />
    -->
    <meta name="viewport" content="width=device-width, initial-scale=1.00, minimum-scale=0.00, maximum-scale=10.00, user-scalable=yes" />


    <style type="text/css">
        html, body {
            width: 100%;
            height: 100%;
            margin: 0px;
            padding: 0px;
        }


        * {
            margin: 0px;
            padding: 0px;
            box-sizing: border-box;
            #white-space-collapse: discard;
        }
    </style>



    <style>
        body {
            font-family: Verdana;
            font-size: 18px;
        }
    </style>

    <script>

        // Commercial alternative: https://xdsoft.net/jodit/play.html
        // document.getElementsByTagName("title")[0].firstChild.nodeValue
        // var myTitle = document.getElementById("demo").childNodes[0].nodeValue;
        // transform: scale(1);
        // transform-origin: 0% 0% 0px;

        // https://gist.github.com/chriszarate/5092641
        // commonAncestorContainer: range.parentElement(),
        // function isRange(obj) { return ('type' in obj && obj.type === 'Range'); }
        // var range = window.getSelection().getRangeAt(0);
        // range.startContainer
        // range.endContainer
        // range.startOffse
        // range.endOffset

        // Browser-differences
        // https://gist.github.com/visnup/3456262
        // https://stackoverflow.com/questions/361130/get-selected-text-and-selected-nodes-on-a-page


        // https://stackoverflow.com/questions/3545018/selected-text-event-trigger-in-javascript
        function dispachSelectedEvent()
        {
            //$('div').mouseup(function() {
            //    var text=getSelectedText();
            //    if (text!='') alert(text);
            //});

            function getSelectedText()
            {
                if (window.getSelection)
                {
                    return window.getSelection().toString();
                } else if (document.selection)
                {
                    return document.selection.createRange().text;
                }
                return '';
            }
        }



        // http://codetheory.in/javascript-document-execcommand-web-method/
        // https://developer.mozilla.org/en-US/docs/Web/API/Document/execCommand
        // https://codepen.io/netsi1964/full/QbLLGW/
        // https://w3c.github.io/editing/execCommand.html
        // window.clipboardData.getData('Text')
        // JavaScript document.execCommand('copy')

        function removeFormat(me)
        {
            var commandName = "removeFormat";
            var showDefaultUI = false; // not implemented in Mozilla.
            var valueArgument = null; // For commands which require an input argument - Specify null if no argument is needed.

            // execCommand() will affect the currently active editable element.
            document.execCommand(commandName, showDefaultUI, valueArgument);
        }

        function bold(me)
        {
            var commandName = "bold";
            var showDefaultUI = false; // not implemented in Mozilla.
            var valueArgument = null; // For commands which require an input argument - Specify null if no argument is needed.

            // execCommand() will affect the currently active editable element.
            document.execCommand(commandName, showDefaultUI, valueArgument);
        }

        function foreColor(me)
        {
            var commandName = "foreColor";
            var showDefaultUI = false; // not implemented in Mozilla.
            var valueArgument = "#FF00FF"; // For commands which require an input argument - Specify null if no argument is needed.

            // execCommand() will affect the currently active editable element.
            document.execCommand(commandName, showDefaultUI, valueArgument);
        }


        function fontSize(me)
        {
            var commandName = "fontSize";
            var showDefaultUI = false; // not implemented in Mozilla.
            var valueArgument = "20px"; // For commands which require an input argument - Specify null if no argument is needed.

            // execCommand() will affect the currently active editable element.
            document.execCommand(commandName, showDefaultUI, valueArgument);
        }


        // https://stackoverflow.com/questions/5222814/window-getselection-return-html
        function getSelectionHtml()
        {
            // debugger;
            var html = "";
            if (typeof window.getSelection != "undefined")
            {
                var sel = window.getSelection();
                if (sel.rangeCount)
                {
                    var container = document.createElement("div");
                    for (var i = 0, len = sel.rangeCount; i < len; ++i)
                    {
                        container.appendChild(sel.getRangeAt(i).cloneContents());
                    }
                    html = container.innerHTML;
                }
            } else if (typeof document.selection != "undefined")
            {
                if (document.selection.type == "Text")
                {
                    html = document.selection.createRange().htmlText;
                }
            }
            return html;
        }

        function removeSelection()
        {
            if (window.getSelection)
            {
                if (window.getSelection().empty)
                {  // Chrome
                    window.getSelection().empty();
                } else if (window.getSelection().removeAllRanges)
                {  // Firefox
                    window.getSelection().removeAllRanges();
                }
            } else if (document.selection)
            {  // IE?
                document.selection.empty();
            }
        }


        // https://stackoverflow.com/questions/16529316/javascript-document-execcommand-own-tags

        function custom(me)
        {
            var commandName = "insertHTML";
            var showDefaultUI = false; // not implemented in Mozilla.

            // For commands which require an input argument - Specify null if no argument is needed.

            // but... this strips all existing tags from the selection!
            // Potential problem: This removes all newlines from the selected text.
            //var valueArgument = "<span class='own-class'>" + document.getSelection() + "</span>";
            var valueArgument = getSelectionHtml();
            alert(valueArgument);
            valueArgument = "<span class='own-class'>" + valueArgument + "</span>";

            // execCommand() will affect the currently active editable element.
            document.execCommand(commandName, showDefaultUI, valueArgument);
            removeSelection();
        }


        function html2fragment_bad(html)
        {
            var parser = new DOMParser(),
                doc = parser.parseFromString(html, "text/xml"),
                documentFragment = document.createDocumentFragment();
            documentFragment.appendChild(doc.documentElement);

            return documentFragment;
        }

        function html2fragment_noIE(html)
        {
            var frag = document.createDocumentFragment(), lastNode;
            var tmp = document.createElement('body'), child;
            tmp.innerHTML = html;

            while (child = tmp.firstElementChild)
            {
                lastNode = frag.appendChild(child);
            }

            return frag;
        }


        function moveUpwardElement(ele)
        {
            var el = ele;

            do
            {
                console.log(el);
            } while ((el = el.previousElementSibling || el.parentElement || null) != null && el != document.body)

        }



        function moveUpwardNode(ele)
        {
            var el = ele;

            do
            {
                console.log(el);
            } while ((el = el.previousSibling || el.parentNode || null) != null && el != document.body)

        }


        // https://stackoverflow.com/questions/5471731/in-order-successor-in-binary-search-tree
        function findNextNode(node)
        {
            //if (node.childNodes.length > 0)
            //    return node.firstChild;

            if (node.nextSibling)
                return node.nextSibling;

            while (true)
            {
                if (node.parentNode)
                {
                    if (node.parentNode.nextSibling)
                        return node.parentNode.nextSibling;
                    else
                        node = node.parentNode;
                }
                else
                    break; // return null;
            } // Whend

            return null;
        }


        function moveDownwardNode(ele)
        {
            var el = ele;

            do
            {
                console.log(el);

                el = findNextNode(el);
            } while (el != null)

        }



        // https://stackoverflow.com/questions/5471731/in-order-successor-in-binary-search-tree
        function findNextElement(ele)
        {
            // Ignore children - we have current element

            //if (ele.children.length > 0)
            //    return ele.firstElementChild;

            if (ele.nextElementSibling)
                return ele.nextElementSibling;

            while (true)
            {
                if (ele.parentElement)
                {
                    if (ele.parentElement.nextElementSibling)
                        return ele.parentElement.nextElementSibling;
                    else
                        ele = ele.parentElement;
                }
                else
                    break; // return null;
            } // Whend

            return null;
        }




        // https://javascript.info/dom-navigation
        // https://stackoverflow.com/questions/7935689/what-is-the-difference-between-children-and-childnodes-in-javascript
        // In a node tree, the top node is called the root (or root node)
        // Every node has exactly one parent, except the root (which has no parent)
        // A node can have a number of children
        // Siblings(brothers or sisters) are nodes with the same parent
        function moveDownward(ele)
        {
            var el = ele;

            do
            {
                console.log(el);

                el = findNextElement(el);
            } while (el != null && document.body.contains(el))
        }


        function moveDownward_old(ele)
        {
            var el = ele;
            // debugger;

            // while el is descendant of some container
            // document.body.contains(document.getElementById("lol"))
            while (el != null && document.body.contains(el))
            {
                console.log(el);


                if (el.nextElementSibling)
                {
                    el = el.nextElementSibling;
                    continue;
                }

                while (true)
                {
                    if (el.parentElement)
                    {
                        if (el.parentElement.nextElementSibling)
                        {
                            el = el.parentElement.nextElementSibling;
                            break;
                        }
                        else
                            el = el.parentElement;
                    }
                    else
                    {
                        el = null;
                        break;
                    }
                }

                if (el == null)
                    break;

                //if (el.children.length != 0)
                //{
                //    el = el.firstElementChild;
                //}
            }
        }




        function test()
        {
            moveUpward(document.getElementById("lol"));
            moveDownward(document.getElementById("lol"));
        }


        function inserImageBefore(html)
        {

            html = '<img src="http://www.lehrstellenboerse.ch/images/show_image?image_id=2116" width="200px" height="100px" />';
            insertHtmlBeforeSelection(html);
        }



        function insertHtmlBeforeSelection(html)
        {
            console.log("before")
            m++;
            if (window.getSelection)
            {

                var sel = window.getSelection();
                var range = sel.getRangeAt(0);

                var frag = document.createDocumentFragment();

                // frag.innerHTML = html;

                // var img = document.createElement("img");
                // add image properties here
                // frag.appendChild(img);
                var tmp = document.createElement('body'), child;
                tmp.innerHTML = html;
                while (child = tmp.firstElementChild)
                {
                    frag.appendChild(child);
                }


                range.insertNode(frag);
            } else if (document.selection && document.selection.createRange)
            {
                // document.selection.createRange().pasteHTML(html);
                // https://stackoverflow.com/questions/4023194/how-to-insert-html-string-in-between-two-dom-nodes

                range = document.selection.createRange();
                var expandedSelRange1 = range.duplicate();
                range.collapse(true);
                var expandedSelRange = range.duplicate();
                range.pasteHTML(html);

                expandedSelRange.setEndPoint("EndToEnd", expandedSelRange1);
                expandedSelRange.select();
            }
        }

        function insertHtmlAfterSelection(html)
        {
            console.log("after")
            n++;

            var sel, range, expandedSelRange, node;
            if (window.getSelection)
            {
                sel = window.getSelection();
                if (sel.getRangeAt && sel.rangeCount)
                {
                    range = window.getSelection().getRangeAt(0);
                    expandedSelRange = range.cloneRange();
                    range.collapse(false);

                    // Range.createContextualFragment() would be useful here but is
                    // non-standard and not supported in all browsers (IE9, for one)


                    var el = document.createElement("div");
                    el.innerHTML = html;

                    var frag = document.createDocumentFragment(), node, lastNode;
                    while ((node = el.firstChild))
                    {
                        lastNode = frag.appendChild(node);
                    }

                    range.insertNode(frag);

                    // Preserve the selection
                    if (lastNode)
                    {
                        expandedSelRange.setEndAfter(lastNode);
                        sel.removeAllRanges();
                        sel.addRange(expandedSelRange);
                    }
                }
            } else if (document.selection && document.selection.createRange)
            {
                // https://stackoverflow.com/questions/4023194/how-to-insert-html-string-in-between-two-dom-nodes
                range = document.selection.createRange();
                expandedSelRange = range.duplicate();
                range.collapse(false);
                range.pasteHTML(html);
                expandedSelRange.setEndPoint("EndToEnd", range);
                expandedSelRange.select();
            }
        }


        function replaceSelectionHtml(before, after, cleanUp)
        {
            // console.log("before")

            var valueArgument = getSelectionHtml();
            // console.log("valueArgument", valueArgument);
            var html = before + cleanUp(valueArgument) + after;
            // console.log("html", html);


            m++;
            if (window.getSelection)
            {

                var sel = window.getSelection();
                var range = sel.getRangeAt(0);

                range.deleteContents();

                var temp = document.createElement("div");
                temp.innerHTML = html;

                var frag = document.createDocumentFragment(), node, lastNode;
                while ((node = temp.firstChild))
                {
                    lastNode = frag.appendChild(node);
                }

                range.insertNode(frag);

                if (lastNode)
                {
                    range.setStartBefore(lastNode);
                    range.setEndAfter(lastNode);

                    // range.setStartAfter(null);
                    // range.setEndBefore(null);

                    sel.removeAllRanges();
                    sel.addRange(range);
                }

            }
            else if (document.selection && document.selection.createRange)
            {
                // https://stackoverflow.com/questions/4023194/how-to-insert-html-string-in-between-two-dom-nodes

                // https://docs.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/platform-apis/aa741548(v%3dvs.85)
                // https://www.codeproject.com/Questions/897645/Replacing-selected-text-HTML-JavaScript
                // https://stackoverflow.com/questions/3053542/how-to-get-the-start-and-end-points-of-selection-in-text-area
                var range = document.selection.createRange();
                var leftSide = range.getBookmark();
                var newRange = range.duplicate();
                var rightSide = range.duplicate();
                range.pasteHTML(html);

                newRange.moveToBookmark(leftSide);
                newRange.setEndPoint("EndToStart", rightSide);
                newRange.select();
            }
        }





        function TOFIXinserHtmlBeforeAfter(before, after)
        {
            if (before != null)
                insertHtmlBeforeSelection(before)

            if (after != null) insertHtmlAfterSelection(after)
        }


        // compareStrings(string1, string2, true, false)
        function compareStrings(string1, string2, ignoreCase, useLocale)
        {
            if (string1 == null && string2 == null)
                return true;

            if (string1 == null || string2 == null)
                return false;

            if (ignoreCase)
            {
                if (useLocale)
                {
                    string1 = string1.toLocaleLowerCase();
                    string2 = string2.toLocaleLowerCase();
                }
                else
                {
                    string1 = string1.toLowerCase();
                    string2 = string2.toLowerCase();
                }
            }

            return string1 === string2;
        }







        function inserHtmlBeforeAfter(before, after)
        {
            // debugger;

            if (before != null)


                // replaceSelectionHtml("<div style='font-size: 20px; font-weight: bold; display: inline-block;'>", "</div>");



                function allDescendants(node)
                {

                    for (var i = 0; i < node.childNodes.length; i++)
                    {
                        var child = node.childNodes[i];
                        allDescendants(child);
                    }

                    // console.log("cchild", node);
                    //my_elem.parentNode.insertBefore(span, my_elem);

                    if (compareStrings(node.tagName, "b", true, false))
                    {
                        // console.log("match innerHTML", node.innerHTML);
                        // console.log("match node", node);
                        // console.log("match node.parent", node.parentElement);
                        node.insertAdjacentHTML('beforebegin', node.innerHTML);
                        node.parentElement.removeChild(node);
                    }


                    console.log("cchild.inner", node.innerHTML);
                    // doSomethingToNode(child);
                }

            replaceSelectionHtml("<b>", "</b>", function cu(html)
            {
                console.log("cu");

                var temp = document.createElement("div");
                temp.innerHTML = html;

                console.log("temp old", temp.innerHTML);
                allDescendants(temp);
                console.log("temp new", temp.innerHTML);

                return temp.innerHTML;
            });

            // if (after != null) insertHtmlAfterSelection(after)
        }


        function foo(me)
        {
            bold(me);
            foreColor(me);
            //custom(me);
        }


        var m = n = 0;
    </script>


    <style type="text/css" media="all">
        .icon {
            display: inline-block;
            width: 18px;
            height: 18px;
            overflow: hidden;
            zoom: 1;
            cursor: pointer;
            opacity: 0.6;
            background-color: rgb(239, 239, 239);
            border: rgb(239, 239, 239);
            background-image: url(images/nicEditIcons-latest.gif);
            float: left;
            border: 1px solid gray;
        }

        .icon-bold {
            background-position: -54px 0px;
        }

        .icon-italic {
            background-position: -126px 0px;
        }

        .icon-underline {
            background-position: -342px 0px
        }

        .icon-align-left {
            background-position: -162px 0px;
        }

        .icon-align-center {
            background-position: -72px 0px;
        }

        .icon-align-right {
            background-position: -234px 0px;
        }

        .icon-align-block {
            background-position: -144px 0px;
        }

        .icon-list-bullet {
            background-position: -324px 0px;
        }

        .icon-list-num {
            background-position: -180px 0px;
        }


        .icon-indent-left {
            background-position: -108px 0px;
        }

        .icon-indent-right {
            background-position: -198px 0px;
        }



        .icon-unknown-1 {
            background-position: -360px 0px;
        }

        .icon-unknown-2 {
            background-position: -468px 0px;
        }

        .icon-unknown-3 {
            background-position: -378px 0px;
        }

        .icon-unknown-4 {
            background-position: -396px 0px;
        }

        .icon-unknown-5 {
            background-position: -36px 0px;
        }

        .icon-unknown-6 {
            background-position: -18px 0px;
        }
    </style>


</head>
<body>
    <div style="magrin: 2px;">
        <div class="icon icon-bold" style=" " unselectable="on"></div>
        <div class="icon icon-italic" style=" " unselectable="on"></div>
        <div class="icon icon-underline" style=" " unselectable="on"></div>
        <div class="icon icon-align-left" style=" " unselectable="on"></div>
        <div class="icon icon-align-center" style=" " unselectable="on"></div>
        <div class="icon icon-align-right" style=" " unselectable="on"></div>
        <div class="icon icon-align-block" style=" " unselectable="on"></div>

        <div class="icon icon-list-bullet" style=" " unselectable="on"></div>
        <div class="icon icon-list-num" style=" " unselectable="on"></div>


        <div class="icon icon-indent-left" style=" " unselectable="on"></div>
        <div class="icon icon-indent-right" style=" " unselectable="on"></div>

        <div class="icon icon-unknown-1" style=" " unselectable="on"></div>
        <div class="icon icon-unknown-2" style=" " unselectable="on"></div>
        <div class="icon icon-unknown-3" style=" " unselectable="on"></div>
        <div class="icon icon-unknown-4" style=" " unselectable="on"></div>
        <div class="icon icon-unknown-5" style=" " unselectable="on"></div>
        <div class="icon icon-unknown-6" style=" " unselectable="on"></div>

    </div>

    <br />

    <div class=" nicEdit-panel" unselectable="on" style="margin: 0px 2px 2px; zoom: 1; overflow: hidden;"><div style="float: left; margin-top: 2px; display: none;"><div class=" nicEdit-buttonContain " style="width: 20px; height: 20px; opacity: 0.6;"><div class=" nicEdit-button-undefined" style="background-color: rgb(239, 239, 239); border: 1px solid rgb(239, 239, 239);"><div class=" nicEdit-button" unselectable="on" style="width: 18px; height: 18px; overflow: hidden; zoom: 1; cursor: pointer; background-image: url(&quot;http://js.nicedit.com/nicEditIcons-latest.gif&quot;); background-position: -432px 0px;"></div></div></div></div><div unselectable="on" style="float: left; margin-top: 2px;"><div class=" nicEdit-buttonContain " unselectable="on" style="width: 20px; height: 20px; opacity: 0.6;"><div class=" nicEdit-button-undefined" unselectable="on" style="background-color: rgb(239, 239, 239); border: 1px solid rgb(239, 239, 239);"><div class=" nicEdit-button" unselectable="on" style="width: 18px; height: 18px; overflow: hidden; zoom: 1; cursor: pointer; background-image: url(&quot;http://js.nicedit.com/nicEditIcons-latest.gif&quot;); background-position: -54px 0px;"></div></div></div></div><div unselectable="on" style="float: left; margin-top: 2px;"><div class=" nicEdit-buttonContain " unselectable="on" style="width: 20px; height: 20px; opacity: 0.6;"><div class=" nicEdit-button-undefined nicEdit-button-hover" unselectable="on" style="background-color: rgb(239, 239, 239); border: 1px solid rgb(239, 239, 239);"><div class=" nicEdit-button" unselectable="on" style="width: 18px; height: 18px; overflow: hidden; zoom: 1; cursor: pointer; background-image: url(&quot;http://js.nicedit.com/nicEditIcons-latest.gif&quot;); background-position: -126px 0px;"></div></div></div></div><div unselectable="on" style="float: left; margin-top: 2px;"><div class=" nicEdit-buttonContain " unselectable="on" style="width: 20px; height: 20px; opacity: 0.6;"><div class=" nicEdit-button-undefined nicEdit-button-hover nicEdit-button-active" unselectable="on" style="background-color: rgb(239, 239, 239); border: 1px solid rgb(239, 239, 239);"><div class=" nicEdit-button" unselectable="on" style="width: 18px; height: 18px; overflow: hidden; zoom: 1; cursor: pointer; background-image: url(&quot;http://js.nicedit.com/nicEditIcons-latest.gif&quot;); background-position: -342px 0px;"></div></div></div></div><div unselectable="on" style="float: left; margin-top: 2px;"><div class=" nicEdit-buttonContain " unselectable="on" style="width: 20px; height: 20px; opacity: 0.6;"><div class=" nicEdit-button-undefined" unselectable="on" style="background-color: rgb(239, 239, 239); border: 1px solid rgb(239, 239, 239);"><div class=" nicEdit-button" unselectable="on" style="width: 18px; height: 18px; overflow: hidden; zoom: 1; cursor: pointer; background-image: url(&quot;http://js.nicedit.com/nicEditIcons-latest.gif&quot;); background-position: -162px 0px;"></div></div></div></div><div unselectable="on" style="float: left; margin-top: 2px;"><div class=" nicEdit-buttonContain " unselectable="on" style="width: 20px; height: 20px; opacity: 0.6;"><div class=" nicEdit-button-undefined" unselectable="on" style="background-color: rgb(239, 239, 239); border: 1px solid rgb(239, 239, 239);"><div class=" nicEdit-button" unselectable="on" style="width: 18px; height: 18px; overflow: hidden; zoom: 1; cursor: pointer; background-image: url(&quot;http://js.nicedit.com/nicEditIcons-latest.gif&quot;); background-position: -72px 0px;"></div></div></div></div><div unselectable="on" style="float: left; margin-top: 2px;"><div class=" nicEdit-buttonContain " unselectable="on" style="width: 20px; height: 20px; opacity: 0.6;"><div class=" nicEdit-button-undefined" unselectable="on" style="background-color: rgb(239, 239, 239); border: 1px solid rgb(239, 239, 239);"><div class=" nicEdit-button" unselectable="on" style="width: 18px; height: 18px; overflow: hidden; zoom: 1; cursor: pointer; background-image: url(&quot;http://js.nicedit.com/nicEditIcons-latest.gif&quot;); background-position: -234px 0px;"></div></div></div></div><div unselectable="on" style="float: left; margin-top: 2px;"><div class=" nicEdit-buttonContain " unselectable="on" style="width: 20px; height: 20px; opacity: 0.6;"><div class=" nicEdit-button-undefined" unselectable="on" style="background-color: rgb(239, 239, 239); border: 1px solid rgb(239, 239, 239);"><div class=" nicEdit-button" unselectable="on" style="width: 18px; height: 18px; overflow: hidden; zoom: 1; cursor: pointer; background-image: url(&quot;http://js.nicedit.com/nicEditIcons-latest.gif&quot;); background-position: -144px 0px;"></div></div></div></div><div unselectable="on" style="float: left; margin-top: 2px;"><div class=" nicEdit-buttonContain " unselectable="on" style="width: 20px; height: 20px; opacity: 0.6;"><div class=" nicEdit-button-undefined" unselectable="on" style="background-color: rgb(239, 239, 239); border: 1px solid rgb(239, 239, 239);"><div class=" nicEdit-button" unselectable="on" style="width: 18px; height: 18px; overflow: hidden; zoom: 1; cursor: pointer; background-image: url(&quot;http://js.nicedit.com/nicEditIcons-latest.gif&quot;); background-position: -180px 0px;"></div></div></div></div><div unselectable="on" style="float: left; margin-top: 2px;"><div class=" nicEdit-buttonContain " unselectable="on" style="width: 20px; height: 20px; opacity: 0.6;"><div class=" nicEdit-button-undefined" unselectable="on" style="background-color: rgb(239, 239, 239); border: 1px solid rgb(239, 239, 239);"><div class=" nicEdit-button" unselectable="on" style="width: 18px; height: 18px; overflow: hidden; zoom: 1; cursor: pointer; background-image: url(&quot;http://js.nicedit.com/nicEditIcons-latest.gif&quot;); background-position: -324px 0px;"></div></div></div></div><div unselectable="on" style="float: left; margin: 2px 1px 0px;"><div class=" nicEdit-selectContain" unselectable="on" style="width: 90px; height: 20px; cursor: pointer; overflow: hidden; opacity: 0.6;"><div unselectable="on" style="overflow: hidden; zoom: 1; border: 1px solid rgb(204, 204, 204); padding-left: 3px; background-color: rgb(255, 255, 255);"><div class=" nicEdit-selectControl" unselectable="on" style="overflow: hidden; float: right; height: 18px; width: 16px; background-image: url(&quot;http://js.nicedit.com/nicEditIcons-latest.gif&quot;); background-position: -450px 0px;"></div><div class=" nicEdit-selectTxt" unselectable="on" style="overflow: hidden; float: left; width: 66px; height: 14px; margin-top: 1px; font-family: sans-serif; text-align: center; font-size: 12px;">Font&nbsp;Size...</div></div></div></div><div unselectable="on" style="float: left; margin: 2px 1px 0px;"><div class=" nicEdit-selectContain" unselectable="on" style="width: 90px; height: 20px; cursor: pointer; overflow: hidden; opacity: 0.6;"><div unselectable="on" style="overflow: hidden; zoom: 1; border: 1px solid rgb(204, 204, 204); padding-left: 3px; background-color: rgb(255, 255, 255);"><div class=" nicEdit-selectControl" unselectable="on" style="overflow: hidden; float: right; height: 18px; width: 16px; background-image: url(&quot;http://js.nicedit.com/nicEditIcons-latest.gif&quot;); background-position: -450px 0px;"></div><div class=" nicEdit-selectTxt" unselectable="on" style="overflow: hidden; float: left; width: 66px; height: 14px; margin-top: 1px; font-family: sans-serif; text-align: center; font-size: 12px;">Font&nbsp;Family...</div></div></div></div><div unselectable="on" style="float: left; margin: 2px 1px 0px;"><div class=" nicEdit-selectContain" unselectable="on" style="width: 90px; height: 20px; cursor: pointer; overflow: hidden; opacity: 0.6;"><div unselectable="on" style="overflow: hidden; zoom: 1; border: 1px solid rgb(204, 204, 204); padding-left: 3px; background-color: rgb(255, 255, 255);"><div class=" nicEdit-selectControl" unselectable="on" style="overflow: hidden; float: right; height: 18px; width: 16px; background-image: url(&quot;http://js.nicedit.com/nicEditIcons-latest.gif&quot;); background-position: -450px 0px;"></div><div class=" nicEdit-selectTxt" unselectable="on" style="overflow: hidden; float: left; width: 66px; height: 14px; margin-top: 1px; font-family: sans-serif; text-align: center; font-size: 12px;">Font&nbsp;Format...</div></div></div></div><div unselectable="on" style="float: left; margin-top: 2px;"><div class=" nicEdit-buttonContain " unselectable="on" style="width: 20px; height: 20px; opacity: 0.6;"><div class=" nicEdit-button-undefined" unselectable="on" style="background-color: rgb(239, 239, 239); border: 1px solid rgb(239, 239, 239);"><div class=" nicEdit-button" unselectable="on" style="width: 18px; height: 18px; overflow: hidden; zoom: 1; cursor: pointer; background-image: url(&quot;http://js.nicedit.com/nicEditIcons-latest.gif&quot;); background-position: -108px 0px;"></div></div></div></div><div unselectable="on" style="float: left; margin-top: 2px;"><div class=" nicEdit-buttonContain " unselectable="on" style="width: 20px; height: 20px; opacity: 0.6;"><div class=" nicEdit-button-undefined" unselectable="on" style="background-color: rgb(239, 239, 239); border: 1px solid rgb(239, 239, 239);"><div class=" nicEdit-button" unselectable="on" style="width: 18px; height: 18px; overflow: hidden; zoom: 1; cursor: pointer; background-image: url(&quot;http://js.nicedit.com/nicEditIcons-latest.gif&quot;); background-position: -198px 0px;"></div></div></div></div><div style="float: left; margin-top: 2px;"><div class=" nicEdit-buttonContain " style="width: 20px; height: 20px; opacity: 0.6;"><div class=" nicEdit-button-undefined" style="background-color: rgb(239, 239, 239); border: 1px solid rgb(239, 239, 239);"><div class=" nicEdit-button" unselectable="on" style="width: 18px; height: 18px; overflow: hidden; zoom: 1; cursor: pointer; background-image: url(&quot;http://js.nicedit.com/nicEditIcons-latest.gif&quot;); background-position: -360px 0px;"></div></div></div></div><div style="float: left; margin-top: 2px;"><div class=" nicEdit-buttonContain " style="width: 20px; height: 20px; opacity: 0.6;"><div class=" nicEdit-button-undefined" style="background-color: rgb(239, 239, 239); border: 1px solid rgb(239, 239, 239);"><div class=" nicEdit-button" unselectable="on" style="width: 18px; height: 18px; overflow: hidden; zoom: 1; cursor: pointer; background-image: url(&quot;http://js.nicedit.com/nicEditIcons-latest.gif&quot;); background-position: -468px 0px;"></div></div></div></div><div style="float: left; margin-top: 2px;"><div class=" nicEdit-buttonContain " style="width: 20px; height: 20px; opacity: 0.6;"><div class=" nicEdit-button-undefined" style="background-color: rgb(239, 239, 239); border: 1px solid rgb(239, 239, 239);"><div class=" nicEdit-button" unselectable="on" style="width: 18px; height: 18px; overflow: hidden; zoom: 1; cursor: pointer; background-image: url(&quot;http://js.nicedit.com/nicEditIcons-latest.gif&quot;); background-position: -378px 0px;"></div></div></div></div><div style="float: left; margin-top: 2px;"><div class=" nicEdit-buttonContain " style="width: 20px; height: 20px; opacity: 0.6;"><div class=" nicEdit-button-undefined" style="background-color: rgb(239, 239, 239); border: 1px solid rgb(239, 239, 239);"><div class=" nicEdit-button" unselectable="on" style="width: 18px; height: 18px; overflow: hidden; zoom: 1; cursor: pointer; background-image: url(&quot;http://js.nicedit.com/nicEditIcons-latest.gif&quot;); background-position: -396px 0px;"></div></div></div></div><div style="float: left; margin-top: 2px;"><div class=" nicEdit-buttonContain " style="width: 20px; height: 20px; opacity: 0.6;"><div class=" nicEdit-button-undefined" style="background-color: rgb(239, 239, 239); border: 1px solid rgb(239, 239, 239);"><div class=" nicEdit-button" unselectable="on" style="width: 18px; height: 18px; overflow: hidden; zoom: 1; cursor: pointer; background-image: url(&quot;http://js.nicedit.com/nicEditIcons-latest.gif&quot;); background-position: -36px 0px;"></div></div></div></div><div style="float: left; margin-top: 2px;"><div class=" nicEdit-buttonContain " style="width: 20px; height: 20px; opacity: 0.6;"><div class=" nicEdit-button-undefined" style="background-color: rgb(239, 239, 239); border: 1px solid rgb(239, 239, 239);"><div class=" nicEdit-button" unselectable="on" style="width: 18px; height: 18px; overflow: hidden; zoom: 1; cursor: pointer; background-image: url(&quot;http://js.nicedit.com/nicEditIcons-latest.gif&quot;); background-position: -18px 0px;"></div></div></div></div></div>




    <input type="button" value="OK" onclick="foo(this);" />
    <input type="button" value="CUST" onclick="custom(this);" />
    <input type="button" value="BEF" onclick="insertHtmlBeforeSelection('<div style=\'background-color: red; display: inline-block;\'>' + m + '</div>');" />
    <input type="button" value="AFT" onclick="insertHtmlAfterSelection('<div style=\'background-color: green; display: inline-block;\'>' + n + '</div>');" />

    <input type="button" value="B" onclick="inserHtmlBeforeAfter('<h1>', '</h1>');" />
    <input type="button" value="IMG" onclick="inserImageBefore('<h1>', '</h1>');" />


    <input type="button" value="LOG" onclick="console.log(document.body.innerHTML);" />




    <div id="editor" style="width: 15cm; height: 2cm; padding: 0.25cm; background-color: dodgerblue;" contenteditable="true">
        this is a simple test

        <table style="outline: 1px solid red; border-width: 2px;">
            <tbody>
                <tr>
                    <td>Column 1</td>
                    <td>Column 2</td>
                    <td>Column 3</td>
                </tr>
            </tbody>
        </table>
    </div>

    <script>

    </script>

    <div id="caretPos"></div>
    <textarea id="txtSource" style="width: 100%; height: 15cm; text-align: left;"></textarea>


    <script>
        // https://developer.mozilla.org/en-US/docs/Web/Events/DOMSubtreeModified
        var editElement = document.getElementById("editor");
        var txtSource = document.getElementById("txtSource");

        if (editElement.addEventListener)
        {
            editElement.addEventListener('DOMSubtreeModified', function ()
            {
                console.log("innerHTML: ", editElement.innerHTML);
                txtSource.value = editElement.innerHTML;
            }, false);
        }


        if (document.addEventListener)
        {
            document.addEventListener("selectionchange", function (e)
            {
                console.log('Selection changed.', e);
            });
        }

        // style="-webkit-user-select:text;" is needed for iPad




        function getCaretCharacterOffsetWithin(element)
        {
            var caretOffset = 0;
            var doc = element.ownerDocument || element.document;
            var win = doc.defaultView || doc.parentWindow;
            var sel;
            if (typeof win.getSelection != "undefined")
            {
                sel = win.getSelection();
                if (sel.rangeCount > 0)
                {
                    var range = win.getSelection().getRangeAt(0);
                    var preCaretRange = range.cloneRange();
                    preCaretRange.selectNodeContents(element);
                    preCaretRange.setEnd(range.endContainer, range.endOffset);
                    caretOffset = preCaretRange.toString().length;
                }
            } else if ((sel = doc.selection) && sel.type != "Control")
            {
                var textRange = sel.createRange();
                var preCaretTextRange = doc.body.createTextRange();
                preCaretTextRange.moveToElementText(element);
                preCaretTextRange.setEndPoint("EndToEnd", textRange);
                caretOffset = preCaretTextRange.text.length;
            }
            return caretOffset;
        }

        function getCaretPosition()
        {
            if (window.getSelection && window.getSelection().getRangeAt)
            {
                var range = window.getSelection().getRangeAt(0);
                var selectedObj = window.getSelection();
                var rangeCount = 0;
                var childNodes = selectedObj.anchorNode.parentNode.childNodes;
                for (var i = 0; i < childNodes.length; i++)
                {
                    if (childNodes[i] == selectedObj.anchorNode)
                    {
                        break;
                    }
                    if (childNodes[i].outerHTML)
                        rangeCount += childNodes[i].outerHTML.length;
                    else if (childNodes[i].nodeType == 3)
                    {
                        rangeCount += childNodes[i].textContent.length;
                    }
                }
                return range.startOffset + rangeCount;
            }
            return -1;
        }

        function showCaretPos()
        {
            var el = document.getElementById("editor");
            var caretPosEl = document.getElementById("caretPos");
            caretPosEl.innerHTML = "Caret position: " + getCaretPosition(); //getCaretCharacterOffsetWithin(el);
        }

        document.body.onkeyup = showCaretPos;
        document.body.onmouseup = showCaretPos;

        var a = { "not": "thebase" };


        function foo()
        {
            console.log("args", arguments);
            console.log("this", this);
            console.dir(this);
            console.log("this", event);
        }

        var bar = foo.bind(a);



    </script>

    <input type="button" id="foo" onclick="bar('abc');" value="OK" />
</body>
</html>
