
server {
    listen    80;
    listen [::]:80 ipv6only=on;
    listen   443 ssl;
    listen [::]:443 ssl ipv6only=on;
    keepalive_timeout   70;
    
    # https://websiteforstudents.com/install-nginx-latest-version-ubuntu-16-10-17-04/
    
        
	#https://sql.guru/
    #server_name  localhost cor-w10-112 .sql.guru www.sql.guru;
    server_name  localhost .localhost cor-w10-112 .cor-w10-112 .sql.guru www.sql.guru;
    
    # ssl    on;
    #ssl_protocols        TLSv1 TLSv1.1 TLSv1.2;
	ssl_protocols         TLSv1.3 TLSv1.2;
    ssl_certificate       "/etc/nginx/sites-ssl/sql.guru/sql.guru.pem";
    ssl_certificate_key   "/etc/nginx/sites-ssl/sql.guru/sql.guru.key";
    
    
    ssl_stapling on; # Requires nginx >= 1.3.7
    ssl_stapling_verify on; # Requires nginx => 1.3.7
    ssl_trusted_certificate "/etc/nginx/sites-ssl/sql.guru/ca.crt";
    
	# https://gist.github.com/plentz/6737338
	# Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
	# ssl_dhparam /etc/nginx/ssl/dhparam.pem;
	
    
    #ssl_ciphers           ECDHE-ECDSA-CHACHA20-POLY1305 ECDHE-RSA-CHACHA20-POLY1305 DHE-RSA-CHACHA20-POLY1305;
    #ssl_ciphers           AES128-SHA:AES256-SHA:RC4-SHA:DES-CBC3-SHA:RC4-MD5;
    #ssl_ciphers           ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    #ssl_ciphers           ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    #ssl_ciphers	       "ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256";
    #ssl_ciphers	       "ECDHE_RSA_CHACHA20_POLY1305";
    #ssl_ciphers           "ECDHE-ECDSA-CHACHA20-POLY1305 ECDHE-RSA-CHACHA20-POLY1305 DHE-RSA-CHACHA20-POLY1305";
    #ssl_ciphers           "ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-CHACHA20-POLY1305";
    ssl_ciphers            "ECDHE-ECDSA-CHACHA20-POLY1305 ECDHE-RSA-CHACHA20-POLY1305 EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH DHE-RSA-CHACHA20-POLY1305 EDH+aRSA !aNULL !eNULL !LOW !3DES !DES !MD5 !MD4! SHA1 !SHA !GOST94 !GOST89MAC !aGOST !aGOST94 !aGOST01 !kGOST !EXP !PSK !SRP !DSS !RC4 !RC2 !SEED !CAMELLIA";
    
    ssl_prefer_server_ciphers on;
    #ssl_ecdh_curve        X25519:secp384r1;
	#ssl_ecdh_curve         secp384r1; # Requires nginx >= 1.1.0
	# ECDH curve order is changed to "X25519, secp256r1, secp521r1, secp384r1" 
    # because P-521 is slightly faster than P-384 in ECDH
	ssl_ecdh_curve         "X25519 secp521r1 secp384r1 secp256r1"; 
    
	
	
    #Session tickets are an alternative to session cache. 
    ssl_session_tickets on;
	ssl_session_cache shared:SSL:10m;
	ssl_session_timeout 1d;
    
	
	# don't send the nginx version number in error pages and Server header
	server_tokens off;
    
    
	# /usr/sbin/nginx -s stop
	# /usr/sbin/nginx -s reload
    
    
	# https://stackoverflow.com/questions/49547/how-to-control-web-page-caching-across-all-browsers
	# 63072000 seconds = 2 years a 365 days 
	add_header "Cache-Control" "no-cache, no-store, max-age=0, private, must-revalidate";
	add_header "Expires" "0";
	add_header "Pragma" "no-cache";
    
	add_header "Strict-Transport-Security" "max-age=63072000; includeSubdomains; preload";
	add_header "X-Frame-Options" "SAMEORIGIN";
    add_header "X-Content-Type-Options" "nosniff";
	add_header "X-XSS-Protection" "1; mode=block";
	add_header "P3P" "CP=\"IDC DSP COR ADM DEVi TAIi PSA PSD IVAi IVDi CONi HIS OUR IND CNT\"";
	add_header "p3p" "CP=\"IDC DSP COR ADM DEVi TAIi PSA PSD IVAi IVDi CONi HIS OUR IND CNT\"";
    
    
	# https://content-security-policy.com/
	# https://lollyrock.com/articles/content-security-policy/
	# add_header "Content-Security-Policy" "default-src 'self' 'unsafe-inline' 'unsafe-eval' data: *.msecnd.net vortex.data.microsoft.com " + selfAuth + " " + refAuth
	# add_header "Content-Security-Policy" "default-src 'self' 'unsafe-inline' 'unsafe-eval' data: *.msecnd.net vortex.data.microsoft.com "
	# add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://ssl.google-analytics.com https://assets.zendesk.com https://connect.facebook.net; img-src 'self' https://ssl.google-analytics.com https://s-static.ak.facebook.com https://assets.zendesk.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com https://assets.zendesk.com; font-src 'self' https://themes.googleusercontent.com; frame-src https://assets.zendesk.com https://www.facebook.com https://s-static.ak.facebook.com https://tautt.zendesk.com; object-src 'none'";
    
	# https://stackoverflow.com/questions/43453624/how-to-figure-out-a-reasonable-content-security-policy-source-for-nginx-virtual
	# (CSP) default-src directive serves as a fallback for the other CSP fetch directives. 
	# For each of the following directives that are absent, 
	# the user agent will look for the default-src directive and will use this value for it:
	add_header Content-Security-Policy "default-src 'self' https://google.com https://youtube.com https://fonts.google.com https://fonts.googleapis.com https://ajax.googleapis.com https://www.google-analytics.com https://cdnjs.cloudflare.com https://code.jquery.com https://s.imgur.com https://imgur.com https://i.imgur.com https://cdn.fontawesome.com/ https://maps.wikimedia.org/;
    script-src 'self' 'unsafe-inline';
    style-src 'self'  'unsafe-inline';
    img-src 'self' https://maps.wikimedia.org/ data:;
    connect-src 'self';
    font-src 'self';
    object-src 'none';
    media-src 'self';
    form-action 'self';
    frame-ancestors 'self';" always;
    
    
	
	resolver 8.8.8.8 8.8.4.4;
    resolver_timeout 5s; 
    
    
    
    #charset koi8-r;
    access_log   /var/log/nginx/sql.guru.access.log;
    
    root /web/sql.guru;
    
    
    # if a file, which is not found in the root folder is requested,
    # then the proxy pass the request to the upsteam (gitlab unicorn)
	location / {
		proxy_read_timeout 300;
		proxy_connect_timeout 300;
		proxy_redirect     off;
        proxy_ssl_session_reuse off;
        proxy_cache_bypass $http_upgrade;
        
        
        #https://www.nginx.com/blog/websocket-nginx/
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        #proxy_set_header Connection "upgrade";
        # The uppercase seems important for some services (like the edgerouter-X web interface), 
        # websockets are broken when upgrade is in lowercase
        proxy_set_header Connection "Upgrade"; 
        
        
        proxy_set_header   X-NginX-Proxy     true;
		proxy_set_header   X-Forwarded-Proto $scheme;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
		proxy_set_header   Host              $http_host;
		proxy_set_header   X-Real-IP         $remote_addr;
		
		proxy_pass_request_headers on;
		#proxy_pass        http://localhost:5080;
		proxy_pass         https://localhost:59801;
	}
	
}
